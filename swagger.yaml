swagger: '2.0'
info:
  version: '1.0'
  title: "db-viewer"
  description: Simple API allowing consumer to view, update and delete database connection details as well as view basic information.
  #license:
  #  name: MIT
  #  url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: "db-viewer.herokuapp.com"
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /connections:
    x-summary: Connections 
    get:
      description: >-
        List all your available connections.
      summary: List all connections
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Connection'
          examples:
            application/json:
              - name: my-connection-1
                hostName: localhost
                databaseName: testdb
                userName: admin
                password: admin
    post:
      description: >-
        You may create new database connections using this action. It takes a JSON
        object containing a all the connections details.
      summary: Create new connection
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Connection'
      responses:
        201:
          description: Successful Response
          schema:
            $ref: '#/definitions/ConnectionEntity'
          examples:
            application/json:
              - id: 3
                name: my-connection-1
                hostName: localhost
                databaseName: testdb
                userName: admin
                password: admin
  /connections/{id}:
    x-summary: Connection
    put:
      description: >-
        You may update database connections using this action. It takes a JSON
        object containing the connection details you want to change. Using a subset of properties will change only the provided subset.
        Null values will be treated as if the
      summary: Update existing connection
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Connection'
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/ConnectionEntity'
          examples:
            application/json:
              - id: 3
                name: my-connection-1
                hostName: localhost
                databaseName: testdb
                userName: admin
                password: admin
    delete:
      description: >-
        You may delete database connections using this action.
      summary: Delete existing connection
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/ConnectionEntity'
          examples:
            application/json:
              - id: 3
                name: my-connection-1
                hostName: localhost
                databaseName: testdb
                userName: admin
                password: admin
  /connections/{id}/schemas:
    x-summary: Schemas
    get:
      description: >-
        List all schemas in the database
      summary: List all schemas
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Schema'
          examples:
            application/json:
              - name: "public"
                owner: 10
                access: "{postgres=UC/postgres,=UC/postgres}"
  /connections/{id}/schema/{schema_name}/tables:
    x-summary: Tables for schema
    get:
      description: >-
        List all tables in the database for the given schema
      summary: List all tables for schema
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: schema_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Table'
          examples:
            application/json:
              - name: "connection"
                owner: postgres
  /connections/{id}/schema/{schema_name}/table/{table_name}/columns:
    x-summary: Columns for table
    get:
      description: >-
        List all columns in the database for the given table
      summary: List all columns for table
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: schema_name
          in: path
          required: true
          type: string
        - name: table_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              $ref: '#/definitions/Column'
          examples:
            application/json:
              - name: "name"
                type: "text"
  /connections/{id}/schema/{schema_name}/table/{table_name}/preview:
    x-summary: Data preview for table
    get:
      description: >-
        List preview data for the given table
      summary: List preview data for table
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: schema_name
          in: path
          required: true
          type: string
        - name: table_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Preview'
          examples:
            application/json:
              - headers: ["name", "db_name"]
                data: [["connection1","testdb"],["connection2","testdb2"]]
  /connections/{id}/schema/{schema_name}/table/{table_name}/statistics:
    x-summary: Statistics for table
    get:
      description: >-
        List statistics for the given table
        Filter by provided input
      summary: List statistics for table
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
        - name: schema_name
          in: path
          required: true
          type: string
        - name: table_name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: '#/definitions/Statistics'
          examples:
            application/json:
              - num_records: 15
                num_attributes: 3
definitions:
  Connection:
    title: Connection
    type: object
    properties:
      name:
        type: string
      hostName:
        type: string
      databaseName:
        type: string
      userName:
        type: string
      password:
        type: string
    required:
      - name
      - hostName
      - databaseName
      - userName
      - password
  ConnectionEntity:
    title: ConnectionEntity
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      hostName:
        type: string
      databaseName:
        type: string
      userName:
        type: string
      password:
        type: string
    required:
      - id
      - name
      - hostName
      - databaseName
      - userName
      - password
  Schema:
    title: Schema
    type: object
    properties:
      name:
        type: string
  Table:
    title: Table
    type: object
    properties:
      table:
        type: string
      owner:
        type: string
  Column:
    title: Column
    type: object
    properties:
      name:
        type: string
      type:
        type: string
  Preview:
    title: Preview
    type: object
    properties:
      headers:
        type: array
        items:
          type: string
      data:
        type: array
        items:
          type: array
          items:
            type: string
  Statistics:
    title: Statistics
    type: object
    properties:
      num_records:
        type: integer
      num_attributes:
        type: integer
